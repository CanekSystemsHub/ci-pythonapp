# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Victor CloudSkills PythonApp

on:
  push:
    branches: 
      - '*'
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f Applications/requirements.txt ]; then pip install -r Applications/requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        mkdir testresults
        pytest Test/unit_tests --junitxml=./testresults/test-results.xml
        
        - name: Publish Unit Test Results
  # You may pin to the exact commit or the version.
  # uses: EnricoMi/publish-unit-test-result-action@08fef70b5c83413abf5e2ee5ea02829bb5937190
  uses: EnricoMi/publish-unit-test-result-action@v1.11
  with:
    # GitHub API Access Token
    github_token: # default is ${{ github.token }}
    # Commit SHA to which test results are published. Only needed if the value of GITHUB_SHA does not work for you.
    commit: # optional
    # Name of the created check run
    check_name: # optional, default is Unit Test Results
    # Title of PR comments, defaults to value of check_name input
    comment_title: # optional
    # The created test result check run has failure state if any test fails or test errors occur. Never fails when set to "nothing", fails only on errors when set to "errors". Default is "test failures".
    fail_on: # optional, default is test failures
    # File pattern of test result files
    files: ./testresults/test-results.xml
